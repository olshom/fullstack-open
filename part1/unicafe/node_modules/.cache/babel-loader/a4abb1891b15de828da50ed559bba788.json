{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part1Examples/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistic = _ref => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  const all = good + neutral + bad;\n\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good * 1 + bad * -1) / all, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good * 100 / all, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistic;\n\nconst Button = _ref2 => {\n  let {\n    handleClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = StatisticLine;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (good * 1 + bad * -1) / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: \"${good*100/all} + %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Statistic\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part1Examples/src/App.js"],"names":["React","useState","Statistic","good","neutral","bad","all","Button","handleClick","text","StatisticLine","value","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst Statistic = ({good, neutral, bad}) => {\n  const all = good + neutral + bad\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      <p>average {(good*1 + bad*(-1))/all} </p>\n      <p>positive {good*100/all} %</p>\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst StatisticLine = ({text, value}) => (\n  <p>{text} {value}</p>\n)\n\nconst App = () => {\nconst [good, setGood] = useState(0)\nconst [neutral, setNeutral] = useState(0)\nconst [bad, setBad] = useState(0)\nconst all = good + neutral + bad\n\nconst handleGood = () => {\n  setGood(good + 1)\n}\n\nconst handleNeutral = () => {\n  setNeutral(neutral + 1)\n}\n\nconst handleBad = () => {\n  setBad(bad + 1)\n}\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text='good'/>\n      <Button handleClick={handleNeutral} text='neutral'/>\n      <Button handleClick={handleBad} text='bad'/>\n      <h1>statistics</h1>\n      <StatisticLine text=\"good\" value ={good} />\n      <StatisticLine text=\"neutral\" value ={neutral} />\n      <StatisticLine text=\"bad\" value ={bad} />\n      <StatisticLine text=\"all\" value ={all} />\n      <StatisticLine text=\"average\" value ={(good*1 + bad*(-1))/all} />\n      <StatisticLine text=\"positive\" value =\"${good*100/all} + %\" />\n      <Statistic good={good} neutral={neutral} bad={bad} />\n\n      </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}