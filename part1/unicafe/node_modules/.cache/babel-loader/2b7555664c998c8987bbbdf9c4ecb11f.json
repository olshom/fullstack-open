{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = StatisticLine;\n\nconst Statistic = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  const all = good + neutral + bad;\n\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"good\",\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"neutral\",\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"bad\",\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"all\",\n          value: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"average\",\n          value: (good * 1 + bad * -1) / all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"positive\",\n          value: `${good * 100 / all} %`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Statistic;\n\nconst Button = _ref3 => {\n  let {\n    handleClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part1/unicafe/src/App.js"],"names":["React","useState","StatisticLine","text","value","Statistic","good","neutral","bad","all","Button","handleClick","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst StatisticLine = ({text, value}) => (\n  <tr>\n    <td>{text}</td>\n    <td>{value}</td>\n  </tr>\n)\n\nconst Statistic = ({good, neutral, bad}) => {\n  const all = good + neutral + bad\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n  return (\n    <>\n      <table>\n        <tbody>\n          <StatisticLine text=\"good\" value ={good} />\n          <StatisticLine text=\"neutral\" value ={neutral} />\n          <StatisticLine text=\"bad\" value ={bad} />\n          <StatisticLine text=\"all\" value ={all} />\n          <StatisticLine text=\"average\" value ={(good*1 + bad*(-1))/all} />\n          <StatisticLine text=\"positive\" value ={`${good*100/all} %`} />\n        \n        </tbody>\n      </table>\n    </>\n  )\n}\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst App = () => {\nconst [good, setGood] = useState(0)\nconst [neutral, setNeutral] = useState(0)\nconst [bad, setBad] = useState(0)\n\nconst handleGood = () => {\n  setGood(good + 1)\n}\n\nconst handleNeutral = () => {\n  setNeutral(neutral + 1)\n}\n\nconst handleBad = () => {\n  setBad(bad + 1)\n}\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text='good'/>\n      <Button handleClick={handleNeutral} text='neutral'/>\n      <Button handleClick={handleBad} text='bad'/>\n      <Statistic good={good} neutral={neutral} bad={bad} />\n\n      </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}