{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport personsService from './services/PersonsService';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState('notification');\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addNumber = event => {\n    event.preventDefault();\n    const numberObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    };\n\n    if (persons.find(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === newName;\n    })) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(_ref2 => {\n          let {\n            name\n          } = _ref2;\n          return name === newName;\n        });\n        const changedPerson = { ...person,\n          number: newNumber\n        };\n        personsService.updateContact(changedPerson).then(returnedPerson => {\n          setNotification(`${numberObject.name} was changed`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n          setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    } else {\n      personsService.createPerson(numberObject).then(returnedPerson => {\n        setNotification(`Added ${numberObject.name}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personsService.deletePerson(id).then(setPersons(persons.filter(person => person.id !== id)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      newFilter: newFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addNumber: addNumber,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Persons, {\n        persons: persons,\n        newFilter: newFilter,\n        deletePerson: deletePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R4smRu1o0OHGWdPA3kGjFOIILbQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","PersonForm","Persons","Filter","personsService","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","setNotification","getAll","then","initialPersons","addNumber","event","preventDefault","numberObject","name","number","id","length","find","window","confirm","person","changedPerson","updateContact","returnedPerson","setTimeout","map","createPerson","concat","handleNameChange","target","value","handleNumberChange","handleSearch","deletePerson","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personsService from './services/PersonsService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState('notification')\n\n  useEffect(() => {\n    personsService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons) \n    })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n\n    const numberObject = {\n      name: newName,\n      number: newNumber,\n      id:persons.length + 1\n    }\n\n    if (persons.find(({name})=> name===newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n        const person = persons.find(({name})=> name===newName)\n        const changedPerson = {...person, number: newNumber}\n\n        personsService\n          .updateContact(changedPerson)\n          .then(returnedPerson => {\n            setNotification(`${numberObject.name} was changed`)\n            setTimeout(() => {setNotification(null)}, 5000)\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      personsService\n        .createPerson(numberObject)\n        .then(returnedPerson => {\n          setNotification(`Added ${numberObject.name}`)\n          setTimeout(() => {setNotification(null)}, 5000)\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)){\n      personsService\n      .deletePerson(id) \n      .then(setPersons(persons.filter(person => person.id !== id)))\n    }      \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter newFilter={newFilter} handleSearch={handleSearch}/>\n      <h2>add a new</h2>\n      <PersonForm addNumber={addNumber} newName={newName} handleNameChange={handleNameChange} \n      newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <ul>\n        <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson}/>\n      </ul>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}