{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport personsService from './services/PersonsService';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addNumber = event => {\n    event.preventDefault();\n    const numberObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.find(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === newName;\n    })) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(_ref2 => {\n          let {\n            name\n          } = _ref2;\n          return name === newName;\n        });\n        const changedPerson = { ...person,\n          number: newNumber\n        };\n        personsService.updateContact(changedPerson).then(returnedPerson => {\n          setNotification(`${numberObject.name} was changed`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n          setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          setErrorMessage(`the contact ${changedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n          setPersons(persons.filter(person => person.id !== changedPerson.id));\n        });\n      }\n    } else {\n      personsService.createPerson(numberObject).then(returnedPerson => {\n        setNotification(`Added ${numberObject.name}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personsService.deletePerson(id).then(setPersons(persons.filter(person => person.id !== id)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification,\n      textColor: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage,\n      textColor: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      newFilter: newFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addNumber: addNumber,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Persons, {\n        persons: persons,\n        newFilter: newFilter,\n        deletePerson: deletePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jZhxEvRB/TSVNSuwrpuWDR5xwFY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","PersonForm","Persons","Filter","personsService","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","setNotification","errorMessage","setErrorMessage","getAll","then","initialPersons","addNumber","event","preventDefault","numberObject","name","number","find","window","confirm","person","changedPerson","updateContact","returnedPerson","setTimeout","map","id","catch","error","filter","createPerson","concat","handleNameChange","target","value","handleNumberChange","handleSearch","deletePerson"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personsService from './services/PersonsService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personsService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons) \n    })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n\n    const numberObject = {\n      name: newName,\n      number: newNumber,\n      \n    }\n\n    if (persons.find(({name})=> name===newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n        const person = persons.find(({name})=> name===newName)\n        const changedPerson = {...person, number: newNumber}\n\n        personsService\n          .updateContact(changedPerson)\n          .then(returnedPerson => {\n            setNotification(`${numberObject.name} was changed`)\n            setTimeout(() => {setNotification(null)}, 5000)\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setErrorMessage(`the contact ${changedPerson.name} was already deleted from server`)\n            setTimeout(() => {setErrorMessage(null)}, 5000)\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n          })\n      }\n    } else {\n      personsService\n        .createPerson(numberObject)\n        .then(returnedPerson => {\n          setNotification(`Added ${numberObject.name}`)\n          setTimeout(() => {setNotification(null)}, 5000)\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)){\n      personsService\n      .deletePerson(id) \n      .then(setPersons(persons.filter(person => person.id !== id)))\n    }      \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} textColor='green'/>\n      <Notification message={errorMessage} textColor='red'/>\n      <Filter newFilter={newFilter} handleSearch={handleSearch}/>\n      <h2>add a new</h2>\n      <PersonForm addNumber={addNumber} newName={newName} handleNameChange={handleNameChange} \n      newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <ul>\n        <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson}/>\n      </ul>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}