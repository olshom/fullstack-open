{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part2/part2.1-2.5/2.1/src/App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_c = Header;\n\nconst Content = _ref2 => {\n  let {\n    parts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [parts.map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [part.name, \" \", part.exercises]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"total of \", parts.reduce((sum, part) => sum + part.exercises, 0), \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Content;\n\nconst Course = _ref3 => {\n  let {\n    name,\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Course;\n\nconst Courses = _ref4 => {\n  let {\n    courses\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        'list-style-type': 'none'\n      },\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n        name: course.name,\n        parts: course.parts\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Courses;\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Courses, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Course\");\n$RefreshReg$(_c4, \"Courses\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part2/part2.1-2.5/2.1/src/App.js"],"names":["React","Header","name","Content","parts","map","part","exercises","id","reduce","sum","Course","Courses","courses","course","App"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst Header = ({ name }) => (\n  <>\n  <h1>{name}</h1>\n  </>\n)\n\nconst Content = ({ parts }) => {\n  return (\n    <ul >\n      {parts.map(part => <li key={part.id} >{part.name} {part.exercises}</li>)}\n      <p>total of {parts.reduce((sum, part) => sum+part.exercises, 0)} exercises</p>\n    </ul>\n  )\n}\n\nconst Course = ({name, parts}) => {\n  return (\n    <li>\n      <Header name={name} />\n      <Content parts={parts} />\n  </li>\n  )\n}\n\nconst Courses = ({ courses }) => {\n  return (\n    <div>\n      <ul style={{'list-style-type': 'none'}}>\n        {courses.map(course =>\n          <Course key={course.id} name={course.name} parts={course.parts}/>)}\n      </ul>\n    </div>\n  )\n}\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10,\n        id: 1\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7,\n        id: 2\n      },\n      {\n        name: 'State of a component',\n        exercises: 14,\n        id: 3\n      },\n      {\n        name: 'Redux',\n        exercises: 11,\n        id: 4\n      }\n    ]\n  }, \n  {\n    name: 'Node.js',\n    id: 2,\n    parts: [\n      {\n        name: 'Routing',\n        exercises: 3,\n        id: 1\n      },\n      {\n        name: 'Middlewares',\n        exercises: 7,\n        id: 2\n      }\n    ]\n  }\n]\n\n  return <Courses courses={courses} />\n}\n\nexport default App;\n  "]},"metadata":{},"sourceType":"module"}