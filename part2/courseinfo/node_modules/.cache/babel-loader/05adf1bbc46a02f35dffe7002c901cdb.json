{"ast":null,"code":"var _jsxFileName = \"/home/olga/Study/fullStackOpen/part2/part2.1-2.5/src/components/Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c = Header;\n\nconst Content = _ref2 => {\n  let {\n    parts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      'listStyleType': 'none'\n    },\n    children: [parts.map(part => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [part.name, \" \", part.exercises]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 47\n      }, this)\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"total of \", parts.reduce((sum, part) => sum + part.exercises, 0), \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = Content;\n\nconst Course = _ref3 => {\n  let {\n    name,\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_c3 = Course;\nexport default Course;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Course\");","map":{"version":3,"sources":["/home/olga/Study/fullStackOpen/part2/part2.1-2.5/src/components/Course.js"],"names":["Header","name","Content","parts","map","part","exercises","id","reduce","sum","Course"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACX;AAAA,2BACA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADA,mBADW;AAAA,CAAf;;KAAMD,M;;AAMJ,MAAME,OAAO,GAAG,SAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7B,sBACE;AAAI,IAAA,KAAK,EAAE;AAAC,uBAAiB;AAAlB,KAAX;AAAA,eACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAI;AAAA,6BAAmB;AAAA,mBAAIA,IAAI,CAACJ,IAAT,OAAgBI,IAAI,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB,OAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YAAlB,CADH,eAEE;AAAA,6BAAG;AAAA,gCAAkBJ,KAAK,CAACK,MAAN,CAAa,CAACC,GAAD,EAAMJ,IAAN,KAAeI,GAAG,GAACJ,IAAI,CAACC,SAArC,EAAgD,CAAhD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMJ,O;;AASN,MAAMQ,MAAM,GAAG,SAAmB;AAAA,MAAlB;AAACT,IAAAA,IAAD;AAAOE,IAAAA;AAAP,GAAkB;AAChC,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMO,M;AASN,eAAeA,MAAf","sourcesContent":["const Header = ({ name }) => (\n    <>\n    <h2>{name}</h2>\n    </>\n  )\n  \n  const Content = ({ parts }) => {\n    return (\n      <ul style={{'listStyleType': 'none'}}>\n        {parts.map(part => <li key={part.id} ><p>{part.name} {part.exercises}</p></li>)}\n        <p><strong>total of {parts.reduce((sum, part) => sum+part.exercises, 0)} exercises</strong></p>\n      </ul>\n    )\n  }\n  \n  const Course = ({name, parts}) => {\n    return (\n      <li>\n        <Header name={name} />\n        <Content parts={parts} />\n    </li>\n    )\n  }\n\n  export default Course"]},"metadata":{},"sourceType":"module"}